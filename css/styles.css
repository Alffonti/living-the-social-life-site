/* Following this design: https://xd.adobe.com/spec/75d448ea-569a-4b7e-721b-9bbd3b2b97b9-03e5/grid */

/* =================
General settings
================= */

body {
    margin: 0;
    font-family: 'Ubuntu', sans-serif;
    font-size: 1.125rem; /* the root em depends on the th font size of the html document. By default it is 16px. I will be using rem for font-sizes (in this case the body size is 18px)  */
    font-weight: 300;
    line-height: 1.8;
}

img {
    max-width: 100%; /* using max-width instead of width to avoid the images grow beyond its size (resolution) making it loss the quality */
    display: block; /* to control spacing of images */
}

/* targeting images in about me page and, later, on each of the post pages (cropping the image; I want my image to look horizontal(landscape)) */
.image-full {
    max-height: 300px;
    width: 100%;
    object-fit: cover;
    margin-bottom: 2em;
}

/* =================
Typography
================= */

/* global typography settings */
h1, 
h2,
h3 {
    font-family: 'Lora', serif;
    font-weight: 400;
    color: #143774;
    margin-top: 0;
}

h1 {
    font-size: 2rem; /* 32px */
    margin: 0;
}

/* updating the h3 color to light blue */
h3 {
    color: #1792d2;
}

a {
    color: #1792d2;
}

a:hover,
a:focus {
    color: #143774;
}

strong {
    font-weight: 700; /* always specified it with a number so browsers render it the same (some browsers define it as bold and other as bolder (next font-weight after the body font-weight)) */
}

/* h1 subtitle */
.subtitle {
    font-weight: 700;
    color: #1792d2;
    font-size: .75rem; /* 12px */
    margin: 0;
}

.article-title {
    font-size: 1.5rem; /* 24px */
}

.article-read-more {
    font-size: .875rem;
}

.article-read-more,
.article-info {
    font-size: .875rem;
}

.article-read-more {
    color: #1792d2;
    text-decoration: none;
    font-weight: 700;
}

.article-read-more:hover,
.article-read-more:focus {
    color: #143774;
    text-decoration: underline;
}

.article-info {
    margin: 2em 0;
}

.sidebar-widget-title,
.sidebar-widget-recent-post-title {
    font-size: 1rem;
}

.sidebar-widget-title {
    font-family: 'Ubuntu', sans-serif;
    font-weight: 700;
}

/* I upadted the h3 color to light blue */
.sidebar-widget-recent-post-title {
    color: #143774;
}


/* =================
Layout
================= */

.container {
    width: 90%; /* adding 5% to the left and 5% to th right margins to the container (the `margin: 0 auto` property center the container (which is 90% of the body) relative to the body */
    max-width: 900px;
    /* utility class */
    /* border: 1px solid magenta;  */
    margin: 0 auto 3em;
}

/* targeting just the navigation bar (I updated it .container-flex ) */
.container-flex {
    display: flex; 
    flex-direction: column;
    justify-content: space-between; /* un order to work it should be some remaining space  */
}

header {
    /* centering the text in the centered version */
    /* text-align: center; */
    background: #f8f8f8;
    padding: 2em 0; /* the em property in margins is relative to the font-size of that element (in this case 2em means 2 times the size of the font of the header element )  */
    text-align: center;
    margin-bottom: 3em; /* adding margin between header and h1 (I removed h1 margin top)  */
}



footer {
    background:#143774;
    color: white;
    text-align: center;
    padding: 3em 0;
}

/* approching mobile first and then styling bigger screens with media queries */
/* a media query need to be after the general selectors (if not it can be override) */
/* media query need to be after the general selector */
/* the breakpoint is 675px for this layout (adjusting it depending on a specific layout rather than a specific device) */ /* from a minimum width of 675px and bigger */
/* grouping media queries together (related to the Layout) */
@media (min-width: 675px) {
    .container-flex {
        flex-direction: row;
    }
    
    main {
        width: 70%; /* 70% + 25% = 95% the remaining 5% is to add some gap between the main and the aside element ()using the `justify-content: space-between` property  */
    }
    
    aside {
        width: 25%; /* 70% + 25% = 95%  */
        min-width: 200px; /* setting de aside element to a minimun width to avoid it getting too small (instead of creating a media query with a new breakpoint)  */
        margin-left: 1em; /* as I set a min-width for the aside, there can be the case that there is no extra space remainning between the main and the aside. So, I added a left margin to the aside */
    }
}

/* navigation */

nav ul {
    list-style: none; /* removing the default bullets  */
    padding-left: 0; /* removing left space create in lists by default */
    
    display: flex;
    justify-content: center;
}

/* no need to target nav ul li as the only links inside the nav are the same as inside the ul (keep compound selectors simple) */
nav li {
    /* adding space between links (if the list is centered)  */
    /* margin: 0 1em;  */

    /* adding space between links (if the list is right-aligned). So, there's no space at the end of the last link. Also, instead of using 1em, I used 2em; because now there is no right margin so I have double the space.  */
    margin-left: 2em;
}

nav a {
    text-decoration: none;
    color: #707070;
    font-weight: 700;
    padding: .25em 0; /* adding space on links (to make it easier for tactile screen to click the links) */
}

nav a:hover,
nav a:focus {
    color: #1792d2;
}

.current-page {
    border-bottom: 1px solid #707070;
}

.current-page:hover {
    color: #707070; /* changing the color of the hover state of the curent page back to the general color to show we are already in that page */
}

/* grouping media queries together (related to navigation) */
@media (max-width: 675px) {
    nav ul {
        flex-direction: column;
    }
    
    nav li {
        margin: .5em 0; /* restyling (centering) the links */
    }
}

/* articles */

.article-featured {
    border-bottom: #707070 1px solid;
    padding-bottom: 2em;
    margin-bottom: 2em;
}

/* reordering elements in each of the .article-recent elements  */
.article-recent {
    display: flex;
    flex-direction: column; 
    margin-bottom: 2em;
}

.article-recent-main {
    order: 2;
}

.article-recent-secondary {
    order: 1;
}

/* designig two columns for Recent Articles section for screen bigger than 675px  */
@media (min-width: 675px) {
    .article-recent {
        flex-direction: row;
        justify-content: space-between;
    }
    
    .article-recent-main {
        width: 68%; /* always add width to all the elements inside the flex container, and leave some remaining space (in this case 2%)  */
    }
    
    .article-recent-secondary {
        width: 30%;
    }

    /* cropping the image so that it show a closer look of the object in it; I want my image to look vertical (portrait) */
    .article-image {
        width: 100%;
        min-height: 250px; /* setting a min-height (instead of height to let them grow in bigger screens) to cover each of the recenct article sections  */
        object-fit: cover;
        /* object-position: left; */
    }
}

.article-featured {
    display: flex;
    flex-direction: column;
}

.article-image {
    order: -2; /* jsut targeting the elements I want to move (in this case the article image and the article info). By default all telments have an `order: 0` when the the parent element is a flex container  */
}

.article-info {
    order: -1;
}  

/* sidebar widgets */

.sidebar-widget {
    border: 20px solid #efefef; /* using pixels for borders  */
    margin-bottom: 2em;
    padding: 1em;
}

.sidebar-widget-recent-post {
    display: flex;
    flex-direction: column;
    border-bottom: 1px solid #707070;
    margin-bottom: 1em;
}

.sidebar-widget-recent-post:last-child {
    border: 0;
    margin: 0;
}

.sidebar-widget-image {
    order: -1;
}


